---

- name: Install prosody and jwt related dependencies
  script: ../scripts/script.sh

- name: copy global prosdoy config temmplate
  template:
    src: prosody_global_config.j2
    dest: "/etc/prosody/prosody.cfg.lua"
    owner: root
    group: root
    mode: "0644"
    validate: "luac -p %s"
  notify: restart prosody
  tags:
    - conf

- name: Copy Prosody config template.
  template:
    src: prosody_config.j2
    dest: "/etc/prosody/conf.avail/{{ jitsi_fqdn }}.cfg.lua"
    owner: root
    group: root
    mode: "0644"
    # Simply syntax check for validation, doesn't catch config errors.
    validate: "luac -p %s"
  notify: restart prosody
  tags:
    - conf

- name: Symlink Prosody config by domain name.
  file:
    path: "/etc/prosody/conf.d/{{ jitsi_fqdn }}.cfg.lua"
    state: link
    src: "/etc/prosody/conf.avail/{{ jitsi_fqdn }}.cfg.lua"
  notify: restart prosody

- name: Register jicofo agent with Prosody service.
  command: >
    prosodyctl register focus auth.{{ jitsi_fqdn }} {{ jitsi_meet_jicofo_password }}
  args:
    # Yes, prosody actually URL-escapes the directory name for some reason.
    # Must hardcode the escaping in the prefix, since the replace filter only
    # applies to the server name var, not the concatenated string.
    creates: /var/lib/prosody/{{ 'auth%2e'+jitsi_fqdn | replace('.', '%2e') | replace('-', '%2d') }}/accounts/focus.dat
  notify:
    - restart jicofo
    - restart prosody

- name: Overwrite focus password
  template:
    src: focus.dat.j2
    dest: /var/lib/prosody/{{ 'auth%2e'+jitsi_fqdn | replace('.', '%2e') | replace('-', '%2d') }}/accounts/focus.dat
    owner: prosody
    group: prosody
    mode: '0640'
  notify:
    - restart jicofo
    - restart prosody

- name: Register jvb agent with Prosody service.
  command: >
    prosodyctl register jvb auth.{{ jitsi_fqdn }} {{ jitsi_meet_videobridge_password }}
  args:
    # Yes, prosody actually URL-escapes the directory name for some reason.
    # Must hardcode the escaping in the prefix, since the replace filter only
    # applies to the server name var, not the concatenated string.
    creates: /var/lib/prosody/{{ 'jvg%2e'+jitsi_fqdn | replace('.', '%2e') |  replace('-', '%2d') }}/accounts/jvb.dat
  notify:
    - restart jicofo
    - restart prosody

# Section to support jibri
- name: Register jibri agent with Prosody service.
  command: >
    prosodyctl register jibri auth.{{ jitsi_fqdn }} {{ jibri_user_jibri_password }}
  args:
    # Yes, prosody actually URL-escapes the directory name for some reason.
    # Must hardcode the escaping in the prefix, since the replace filter only
    # applies to the server name var, not the concatenated string.
    creates: /var/lib/prosody/{{ 'auth%2e'+jitsi_fqdn | replace('.', '%2e') | replace('-', '%2d') }}/accounts/jibri.dat
  when: jibri_enable
  notify:
  - restart jicofo
  - restart prosody

- name: Register recorder agent with Prosody service.
  command: >
    prosodyctl register recorder recorder.{{ jitsi_fqdn }} {{ jibri_user_recorder_password }}
  args:
    # Yes, prosody actually URL-escapes the directory name for some reason.
    # Must hardcode the escaping in the prefix, since the replace filter only
    # applies to the server name var, not the concatenated string.
    creates: /var/lib/prosody/{{ 'recorder%2e'+jitsi_fqdn | replace('.', '%2e') | replace('-', '%2d') }}/accounts/recorder.dat
  when: jibri_enable
  notify:
  - restart jicofo
  - restart prosody

- name: cron to restart Prosody nightly
  cron:
    name: restart prosody
    hour: "3"
    minute: "55"
    user: root
    job: "/usr/sbin/service prosody restart >> /var/log/jitsi/restart_prososdy.log 2>&1"
    cron_file: restart_prosody
  when: not videobridge_only
  tags:
    - cron
